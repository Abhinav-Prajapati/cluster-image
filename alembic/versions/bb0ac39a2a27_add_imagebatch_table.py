"""Add ImageBatch table

Revision ID: bb0ac39a2a27
Revises: b8c2e1c76ce3
Create Date: 2025-08-18 17:57:10.819533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bb0ac39a2a27'
down_revision: Union[str, Sequence[str], None] = 'b8c2e1c76ce3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_name', sa.String(length=255), nullable=False),
    sa.Column('image_ids', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('cluster_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='image_clustering'
    )
    op.drop_index(op.f('idx_clustering_results_run_id'), table_name='clustering_results', schema='image_clustering')
    op.drop_table('clustering_results', schema='image_clustering')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clustering_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cluster_label', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['image_clustering.images.id'], name=op.f('clustering_results_image_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('clustering_results_pkey')),
    schema='image_clustering'
    )
    op.create_index(op.f('idx_clustering_results_run_id'), 'clustering_results', ['run_id'], unique=False, schema='image_clustering')
    op.drop_table('image_batches', schema='image_clustering')
    # ### end Alembic commands ###
