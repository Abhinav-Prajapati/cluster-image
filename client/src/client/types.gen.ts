// This file is auto-generated by @hey-api/openapi-ts

/**
 * BatchAnalyze
 * Schema for the analysis request.
 */
export type BatchAnalyze = {
    /**
     * Eps
     */
    eps?: number;
    /**
     * Min Samples
     */
    min_samples?: number;
    /**
     * Metric
     */
    metric?: string;
};

/**
 * BatchClusterUpdate
 * Schema for manually updating a batch's cluster map.
 */
export type BatchClusterUpdate = {
    /**
     * Cluster Map
     */
    cluster_map: {
        [key: string]: Array<number>;
    };
};

/**
 * BatchCreate
 * Schema for the initial creation of a batch.
 */
export type BatchCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Image Ids
     */
    image_ids: Array<number>;
};

/**
 * BatchRename
 * Schema for renaming a batch.
 */
export type BatchRename = {
    /**
     * Name
     */
    name: string;
};

/**
 * BatchResponse
 * Schema for returning full batch details.
 */
export type BatchResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Batch Name
     */
    batch_name: string;
    /**
     * Status
     */
    status: string;
    /**
     * Images
     */
    images: Array<ImageResponse>;
    /**
     * Parameters
     */
    parameters: {
        [key: string]: unknown;
    } | null;
    /**
     * Cluster Summary
     */
    cluster_summary: {
        [key: string]: unknown;
    } | null;
};

/**
 * BatchUpdateImages
 * Schema for adding/removing images from a batch.
 */
export type BatchUpdateImages = {
    /**
     * Image Ids
     */
    image_ids: Array<number>;
};

/**
 * Body_uploadImages
 */
export type BodyUploadImages = {
    /**
     * Files
     */
    files: Array<Blob | File>;
};

/**
 * Body_upload_and_add_to_batch_batches__batch_id__upload_and_add_post
 */
export type BodyUploadAndAddToBatchBatchesBatchIdUploadAndAddPost = {
    /**
     * Files
     */
    files: Array<Blob | File>;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ImageResponse
 * Schema for returning image details.
 */
export type ImageResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Filename
     */
    filename: string;
    /**
     * Original Filename
     */
    original_filename: string;
    /**
     * File Path
     */
    file_path: string;
    /**
     * Has Thumbnail
     */
    has_thumbnail: boolean;
    /**
     * Is Duplicate
     */
    is_duplicate?: boolean;
    /**
     * Message
     */
    message?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type UploadImagesData = {
    body: BodyUploadImages;
    path?: never;
    query?: never;
    url: '/images/upload';
};

export type UploadImagesErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadImagesError = UploadImagesErrors[keyof UploadImagesErrors];

export type UploadImagesResponses = {
    /**
     * Response Uploadimages
     * Successful Response
     */
    200: Array<ImageResponse>;
};

export type UploadImagesResponse = UploadImagesResponses[keyof UploadImagesResponses];

export type GetAllImagesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/images/';
};

export type GetAllImagesResponses = {
    /**
     * Response Getallimages
     * Successful Response
     */
    200: Array<ImageResponse>;
};

export type GetAllImagesResponse = GetAllImagesResponses[keyof GetAllImagesResponses];

export type DeleteImageData = {
    body?: never;
    path: {
        /**
         * Image Id
         */
        image_id: number;
    };
    query?: never;
    url: '/images/{image_id}';
};

export type DeleteImageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteImageError = DeleteImageErrors[keyof DeleteImageErrors];

export type DeleteImageResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetImageFileData = {
    body?: never;
    path: {
        /**
         * Image Id
         */
        image_id: number;
    };
    query?: never;
    url: '/images/{image_id}';
};

export type GetImageFileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetImageFileError = GetImageFileErrors[keyof GetImageFileErrors];

export type GetImageFileResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetImageThumbnailData = {
    body?: never;
    path: {
        /**
         * Image Id
         */
        image_id: number;
    };
    query?: never;
    url: '/images/thumbnail/{image_id}';
};

export type GetImageThumbnailErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetImageThumbnailError = GetImageThumbnailErrors[keyof GetImageThumbnailErrors];

export type GetImageThumbnailResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllBatchesBatchesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/batches/';
};

export type GetAllBatchesBatchesGetResponses = {
    /**
     * Response Get All Batches Batches  Get
     * Successful Response
     */
    200: Array<BatchResponse>;
};

export type GetAllBatchesBatchesGetResponse = GetAllBatchesBatchesGetResponses[keyof GetAllBatchesBatchesGetResponses];

export type CreateBatchBatchesPostData = {
    body: BatchCreate;
    path?: never;
    query?: never;
    url: '/batches/';
};

export type CreateBatchBatchesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateBatchBatchesPostError = CreateBatchBatchesPostErrors[keyof CreateBatchBatchesPostErrors];

export type CreateBatchBatchesPostResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type CreateBatchBatchesPostResponse = CreateBatchBatchesPostResponses[keyof CreateBatchBatchesPostResponses];

export type DeleteBatchBatchesBatchIdDeleteData = {
    body?: never;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}';
};

export type DeleteBatchBatchesBatchIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteBatchBatchesBatchIdDeleteError = DeleteBatchBatchesBatchIdDeleteErrors[keyof DeleteBatchBatchesBatchIdDeleteErrors];

export type DeleteBatchBatchesBatchIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetBatchDetailsBatchesBatchIdGetData = {
    body?: never;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}';
};

export type GetBatchDetailsBatchesBatchIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetBatchDetailsBatchesBatchIdGetError = GetBatchDetailsBatchesBatchIdGetErrors[keyof GetBatchDetailsBatchesBatchIdGetErrors];

export type GetBatchDetailsBatchesBatchIdGetResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type GetBatchDetailsBatchesBatchIdGetResponse = GetBatchDetailsBatchesBatchIdGetResponses[keyof GetBatchDetailsBatchesBatchIdGetResponses];

export type RenameBatchBatchesBatchIdPutData = {
    body: BatchRename;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}';
};

export type RenameBatchBatchesBatchIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RenameBatchBatchesBatchIdPutError = RenameBatchBatchesBatchIdPutErrors[keyof RenameBatchBatchesBatchIdPutErrors];

export type RenameBatchBatchesBatchIdPutResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type RenameBatchBatchesBatchIdPutResponse = RenameBatchBatchesBatchIdPutResponses[keyof RenameBatchBatchesBatchIdPutResponses];

export type RemoveImagesFromBatchBatchesBatchIdImagesDeleteData = {
    body: BatchUpdateImages;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}/images';
};

export type RemoveImagesFromBatchBatchesBatchIdImagesDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveImagesFromBatchBatchesBatchIdImagesDeleteError = RemoveImagesFromBatchBatchesBatchIdImagesDeleteErrors[keyof RemoveImagesFromBatchBatchesBatchIdImagesDeleteErrors];

export type RemoveImagesFromBatchBatchesBatchIdImagesDeleteResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type RemoveImagesFromBatchBatchesBatchIdImagesDeleteResponse = RemoveImagesFromBatchBatchesBatchIdImagesDeleteResponses[keyof RemoveImagesFromBatchBatchesBatchIdImagesDeleteResponses];

export type AddImagesToBatchBatchesBatchIdImagesPostData = {
    body: BatchUpdateImages;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}/images';
};

export type AddImagesToBatchBatchesBatchIdImagesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddImagesToBatchBatchesBatchIdImagesPostError = AddImagesToBatchBatchesBatchIdImagesPostErrors[keyof AddImagesToBatchBatchesBatchIdImagesPostErrors];

export type AddImagesToBatchBatchesBatchIdImagesPostResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type AddImagesToBatchBatchesBatchIdImagesPostResponse = AddImagesToBatchBatchesBatchIdImagesPostResponses[keyof AddImagesToBatchBatchesBatchIdImagesPostResponses];

export type UploadAndAddToBatchBatchesBatchIdUploadAndAddPostData = {
    body: BodyUploadAndAddToBatchBatchesBatchIdUploadAndAddPost;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}/upload-and-add';
};

export type UploadAndAddToBatchBatchesBatchIdUploadAndAddPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadAndAddToBatchBatchesBatchIdUploadAndAddPostError = UploadAndAddToBatchBatchesBatchIdUploadAndAddPostErrors[keyof UploadAndAddToBatchBatchesBatchIdUploadAndAddPostErrors];

export type UploadAndAddToBatchBatchesBatchIdUploadAndAddPostResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type UploadAndAddToBatchBatchesBatchIdUploadAndAddPostResponse = UploadAndAddToBatchBatchesBatchIdUploadAndAddPostResponses[keyof UploadAndAddToBatchBatchesBatchIdUploadAndAddPostResponses];

export type AnalyzeBatchBatchesBatchIdAnalyzePutData = {
    body: BatchAnalyze;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}/analyze';
};

export type AnalyzeBatchBatchesBatchIdAnalyzePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AnalyzeBatchBatchesBatchIdAnalyzePutError = AnalyzeBatchBatchesBatchIdAnalyzePutErrors[keyof AnalyzeBatchBatchesBatchIdAnalyzePutErrors];

export type AnalyzeBatchBatchesBatchIdAnalyzePutResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type AnalyzeBatchBatchesBatchIdAnalyzePutResponse = AnalyzeBatchBatchesBatchIdAnalyzePutResponses[keyof AnalyzeBatchBatchesBatchIdAnalyzePutResponses];

export type UpdateClustersBatchesBatchIdClustersPutData = {
    body: BatchClusterUpdate;
    path: {
        /**
         * Batch Id
         */
        batch_id: number;
    };
    query?: never;
    url: '/batches/{batch_id}/clusters';
};

export type UpdateClustersBatchesBatchIdClustersPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateClustersBatchesBatchIdClustersPutError = UpdateClustersBatchesBatchIdClustersPutErrors[keyof UpdateClustersBatchesBatchIdClustersPutErrors];

export type UpdateClustersBatchesBatchIdClustersPutResponses = {
    /**
     * Successful Response
     */
    200: BatchResponse;
};

export type UpdateClustersBatchesBatchIdClustersPutResponse = UpdateClustersBatchesBatchIdClustersPutResponses[keyof UpdateClustersBatchesBatchIdClustersPutResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://openapi.json` | (string & {});
};