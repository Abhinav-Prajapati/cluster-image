"""Add metadata

Revision ID: 487c42b05f95
Revises: c910e59362f6
Create Date: 2025-08-24 16:46:50.149216

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '487c42b05f95'
down_revision: Union[str, Sequence[str], None] = 'c910e59362f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('width', sa.Integer(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('height', sa.Integer(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('orientation', sa.Integer(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('shot_at', sa.DateTime(timezone=True), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('latitude', sa.Float(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('longitude', sa.Float(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('camera_make', sa.String(length=100), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('camera_model', sa.String(length=100), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('focal_length', sa.String(length=50), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('f_number', sa.Float(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('exposure_time', sa.String(length=50), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('iso', sa.Integer(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('caption', sa.Text(), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('rating', sa.Integer(), nullable=True), schema='image_clustering')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('images', 'rating', schema='image_clustering')
    op.drop_column('images', 'tags', schema='image_clustering')
    op.drop_column('images', 'caption', schema='image_clustering')
    op.drop_column('images', 'iso', schema='image_clustering')
    op.drop_column('images', 'exposure_time', schema='image_clustering')
    op.drop_column('images', 'f_number', schema='image_clustering')
    op.drop_column('images', 'focal_length', schema='image_clustering')
    op.drop_column('images', 'camera_model', schema='image_clustering')
    op.drop_column('images', 'camera_make', schema='image_clustering')
    op.drop_column('images', 'longitude', schema='image_clustering')
    op.drop_column('images', 'latitude', schema='image_clustering')
    op.drop_column('images', 'shot_at', schema='image_clustering')
    op.drop_column('images', 'orientation', schema='image_clustering')
    op.drop_column('images', 'height', schema='image_clustering')
    op.drop_column('images', 'width', schema='image_clustering')
    # ### end Alembic commands ###
