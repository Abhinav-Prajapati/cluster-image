"""Create association table and migrate image batch data

Revision ID: ba650b8c5046
Revises: f20a4b6a74f4
Create Date: 2025-08-24 00:48:43.560083

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba650b8c5046'
down_revision: Union[str, Sequence[str], None] = 'f20a4b6a74f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image_batch_association',
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('group_label', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['image_clustering.image_batches.id'], ),
    sa.ForeignKeyConstraint(['image_id'], ['image_clustering.images.id'], ),
    sa.PrimaryKeyConstraint('batch_id', 'image_id'),
    schema='image_clustering'
    )
    op.drop_column('image_batches', 'cluster_summary', schema='image_clustering')
    op.drop_column('image_batches', 'image_ids', schema='image_clustering')
    op.drop_column('images', 'file_size', schema='image_clustering')
    op.drop_column('images', 'created_at', schema='image_clustering')
    op.drop_column('images', 'mime_type', schema='image_clustering')
    op.drop_column('images', 'features', schema='image_clustering')
    op.drop_column('images', 'has_thumbnail', schema='image_clustering')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('has_thumbnail', sa.BOOLEAN(), autoincrement=False, nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('features', postgresql.BYTEA(), autoincrement=False, nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('mime_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True), schema='image_clustering')
    op.add_column('images', sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=True), schema='image_clustering')
    op.add_column('image_batches', sa.Column('image_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False), schema='image_clustering')
    op.add_column('image_batches', sa.Column('cluster_summary', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True), schema='image_clustering')
    op.drop_table('image_batch_association', schema='image_clustering')
    # ### end Alembic commands ###
